;---------------------------------------------
; S O U T H E R N   C R O S S   N E O  (SCNEO)
;---------------------------------------------
;
; WRITTEN BY CRAIG R. S. JONES
; MELBOURNE, AUSTRALIA.
;
;  MONITOR DEFINITIONS FILE
;
; VERSION : 1.0  07/2023  INITIAL RELEASE
;
;---------------
; RAM MEMORY MAP
;---------------
BOTRAM	.EQU	2000H	;BOTTOM OF SRAM
TOPRAM	.EQU	3FFFH	;TOP OF SRAM
;
VARBLS	.EQU	TOPRAM-0FFH	;MONITOR VARIABLES
BUFFER	.EQU	VARBLS-0100H	;GENERAL PURPOSE BUFFER AREA
ISTACK	.EQU	BUFFER - 0200H	;INITIAL MONITOR STACK
;
RAMEND	.EQU	ISTACK-0400H	;END OF USER RAM
RAMSRT	.EQU	BOTRAM	;START OF USER RAM
;
; BIT BANG BAUD RATE CONSTANTS
;
B300	.EQU	0220H	;300 BAUD
B1200	.EQU	0080H	;1200 BAUD
B2400	.EQU	003FH	;2400 BAUD
B4800	.EQU	001BH	;4800 BAUD
B9600	.EQU	000BH	;9600 BAUD
;
; KEY CODES
;
KEYFN	.EQU	10H	;FN OR GO KEY
KEYAD	.EQU	11H	;ADDRESS KEY
KEYINC	.EQU	12H	;PLUS KEY
KEYDEC	.EQU	13H	;MINUS KEY
;-------------------------
; MONITOR GLOBAL VARIABLES
;-------------------------
;
	.ORG	VARBLS
;
;SERIAL MONITOR VARIABLES
;
VARIDX	.BLOCK	16	;RESERVE SOME SPACE FOR INDEXED VARIABLES (SEE INTELH)
SPSAVE	.BLOCK	2	;SAVE THE STACK POINTER
ADDR	.BLOCK	2	;THE ADDRESS
DATA	.BLOCK	1	;THE DATA
;
FUNTBL	.BLOCK	 2	;FN TABLE ADDRESS
;
; DALLAS SMARTWATCH REGISTERS
;
CALMDE	.BLOCK	2	;CALENDAR MODE
SWREG0	.BLOCK	1	;10THS, 100THS
SWREG1	.BLOCK	1	;SECONDS
SWREG2	.BLOCK	1	;MINUTES
SWREG3	.BLOCK	1	;HOURS
SWREG4	.BLOCK	1	;DAY
SWREG5	.BLOCK	1	;DATE
SWREG6	.BLOCK	1	;MONTH
SWREG7	.BLOCK	1	;YEAR
;
BAUD	.BLOCK	2	;BIT BANG BAUD RATE
KEYTIM	.BLOCK	2	;BEEP DELAY
SPTEMP	.BLOCK	2	;TEMP SYSTEM CALL SP
;
; BLOCK FUNCTIONS
;
COUNT	.BLOCK	2	;NUMBER OF BYTES TO MOVE
BLKSRT	.BLOCK	2	;BLOCK START ADDRESS
BLKEND	.BLOCK	2	;BLOCK END ADDRESS
BLKDST	.BLOCK	2	;DESTINATION ADDRESS
;
FUNJMP	.BLOCK	2	;FN FN KEY JUMP ADDRESS
;
; DISPLAY SCAN REGISTERS
;
DISBUF	.BLOCK	6	;DISPLAY BUFFER
ONTIM	.BLOCK	1	;DISPLAY SCAN ON TIME
OFTIM	.BLOCK	1	;DISPLAY SCAN OFF TIME
;
; MONITOR VARIABLES
;
MODE	.BLOCK	2	;DISPLAY MODE
ADRESS	.BLOCK	2	;USER ADDRESS
KEYDEL	.BLOCK	2	;AUTO INCREMENT DELAY
;
; TEMPORARY REGISTER STORAGE
;
REGPNT	.BLOCK	2	;REGISTER POINTER
TMPPC	.BLOCK	2	;PROGRAM COUNTER
TMPAF	.BLOCK	2	;ACCUMULATOR,FLAG
TMPBC	.BLOCK	2	;BC REGISTER PAIR
TMPDE	.BLOCK	2	;DE REGISTER PAIR
TMPHL	.BLOCK	2	;HL REGISTER PAIR
TMPIX	.BLOCK	2	;INDEX REGISTER X
TMPIY	.BLOCK	2	;INDEX REGISTER Y
TMPSP	.BLOCK	2	;STACK POINTER
;
; RESTART JUMP TABLE AND HARWARE TEST
;
RST08	.BLOCK	2	;RESTART 08H JUMP
RST10	.BLOCK	2	;RESTART 10H JUMP
RST18	.BLOCK	2	;RESTART 18H JUMP
RST20	.BLOCK	2	;RESTART 20H JUMP
RST28	.BLOCK	2	;RESTART 28H JUMP
RST38	.BLOCK	2	;INT INTERRUPT JUMP
RST66	.BLOCK	2	;NMI INTERRUPT JUMP
RAMSUM	.BLOCK	1	;USER RAM CHECKSUM
DALLAS	.BLOCK	1	;RAM TEST LOCATION
SYSERR	.BLOCK	2	;SYSTEM CALL ERROR JUMP
;--------------------
; SYSTEM CALL NUMBERS
;--------------------
;
;  LD   C,SYSTEM CALL NUMBER
;  RST  30H
;
MAIN	.EQU	0	;RESTART MONITOR
VERS	.EQU	1	;RETURNS MONITOR VERSION
DISADD	.EQU	2	;ADDRESS -> DISPLAY BUFFER
DISBYT	.EQU	3	;DATA -> DISPLAY BUFFER
CLRBUF	.EQU	4	;CLEAR DISPLAY BUFFER
SCAND	.EQU	5	;SCAN DISPLAY
CONBYT	.EQU	6	;BYTE -> DISPLAY CODE
CONVHI	.EQU	7	;HI NYBBLE -> DISPLAY CODE
CONVLO	.EQU	8	;LO NYBBLE - > DISPLAY CODE
SKEYIN	.EQU	9	;SCAN DISPLAY UNTIL KEY PRESS
SKEYRL	.EQU	10	;SCAN DISPLAY UNTIL KEY RELEASE
KEYIN	.EQU	11	;WAIT FOR KEY PRESS
KEYREL	.EQU	12	;WAIT FOR KEY RELEASE
MENU	.EQU	13	;SELECT ENTRY FROM MENU
CHKSUM	.EQU	14	;CALCULATE CHECKSUM
MUL16	.EQU	15	;16 BIT MULTIPLY
RAND	.EQU	16	;GENERATE RANDOM NUMBER
INDEXB	.EQU	17	;INDEX INTO BYTE TABLE
INDEXW	.EQU	18	;INDEX INTO WORD TABLE
MUSIC	.EQU	19	;PLAY MUSIC TABLE
TONE	.EQU	20	;PLAY A NOTE
BEEP	.EQU	21	;KEY ENTRY BEEP
SKATE	.EQU	22	;SCAN 8X8 DISPLAY
TXBUF	.EQU	23	;TRANSMIT SERIAL BYTE
WAITC	.EQU	24	;WAIT FOR RECEIVE SERIAL BYTE
ASCHEX	.EQU	25	;ASCII CODE -> HEX
WWATCH	.EQU	26	;WRITE TO SMART WATCH
RWATCH	.EQU	27	;READ FROM SMART WATCH
ONESEC	.EQU	28	;ONE SECOND DELAY USING SMARTWATCH
RLSTEP	.EQU	29	;RELAY S.EQUENCER
DELONE	.EQU	30	;ONE SECOND DELAY LOOP
SCANKEY .EQU	31	;SCAN THE KEYBOARD
INTELH	.EQU	32	;RECEIVE INTEL HEX FILE
SPLIT	.EQU	33	;SEPARATE A BYTE INTO NYBBLES
SNDMSG	.EQU	34	;SND ZERO TERMINATED STRING TO SERIAL PORT
BITASC	.EQU	35	;CONVERT A BYTE INTO AN ASCII STRING OF ONES AND ZEROES
WRDASC	.EQU	36	;CONVERT A WORD TO ASCII
BYTASC	.EQU	37	;CONVERT A BYTE TO ASCII
NYBASC	.EQU	38	;CONVERT A NYBBLE TO ASCII
PCBTYP	.EQU	39	;RETURNS BOARD TYPE, SC OR TEC-1F
PRNTSZ	.EQU	40	;INLINE SERIAL PRINT STRING
KBDTYP	.EQU	41	;RETURNS KEYBOARD TYPE
UPDATE	.EQU	42  ;UPDATE DISPLAY AND MODE DECIMAL POINT SEGMENTS
VARRAM	.EQU	43	;RETURN BASE VARIABLE ADDRESS
SERINIT	.EQU	44	;INITIALISE 6850 INTERRUPT COMMS
SCBUG		.EQU	45	;SCBUG SERIAL MONITOR
ANYCHR	.EQU	46	;RETURNS NUMBER OF CHARACTERS IN RECEIVE BUFFER
RXBUF		.EQU	47	;RECEIVE SERIAL CHAR
MONNAME	.EQU	48	;RETURNS MONITOR NAME

;END OF INCLUDE FILE
