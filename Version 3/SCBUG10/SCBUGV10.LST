                    0001  ;----------------------------------------------
                    0002  ; S O U T H E R N   C R O S S   C O M P U T E R
                    0003  ;----------------------------------------------
                    0004  ;
                    0005  ; WRITTEN BY CRAIG JONES, MELBOURNE, AUSTRALIA
                    0006  ; 
                    0007  ;
                    0008  ; HEADER FILE - CONTAINS ALL MONITOR DEFINITIONS
                    0009  ; ==============================================
                    0010  
                    0011  ;-----------------
                    0012  ; SYSTEM VARIABLES
                    0013  ;-----------------
                    0014  ;RAMSRT  EQU     2000H   ;START OF USER RAM
                    0015  ;RAMEND  EQU     3BFFH   ;END OF USER RAM
                    0016  ;SYSTEM  EQU     3F00H   ;SYSTEM POINTER
                    0017  ;
                    0018  ; BAUD RATE CONSTANTS
                    0019  ;
                    0020  ;B300    EQU     0220H   ;300 BAUD
                    0021  ;B1200   EQU     0080H   ;1200 BAUD
                    0022  ;B2400   EQU     003FH   ;2400 BAUD
                    0023  ;B4800   EQU     001BH   ;4800 BAUD
                    0024  ;B9600   EQU     000BH   ;9600 BAUD
                    0025  ;
                    0026  ; I/O PORT ADDRESSES
                    0027  ;
                    0028  ;IO0     EQU     80H     ;IO PORT 0
                    0029  ;IO1     EQU     81H     ;IO PORT 1
                    0030  ;IO2     EQU     82H     ;IO PORT 2
                    0031  ;IO3     EQU     83H     ;IO PORT 3
0084:               0032  DISPLY  EQU     84H     ;DISPLAY LATCH
0085:               0033  SCAN    EQU     85H     ;DISPLAY SCAN LATCH
0086:               0034  KEYBUF  EQU     86H     ;KEYBOARD BUFFER
0087:               0035  IO7     EQU     87H     ;SPARE IO ADDRESS
                    0036  ;-------------------------
                    0037  ; MONITOR GLOBAL VARIABLES
                    0038  ;-------------------------
                    0039  ;SYSFLG	EQU	    3FB3H	;SYSTEM FLAGS BIT 0=KEYBOARD FLAG
                    0040  ;FUNTBL  EQU     3FB4H   ;FN TABLE ADDRESS
                    0041  ;
                    0042  ; DALLAS SMARTWATCH REGISTERS
                    0043  ;
                    0044  ;CALMDE  EQU     3FB6H   ;CALENDAR MODE
                    0045  ;SWREG0  EQU     3FB8H   ;10THS, 100THS
                    0046  ;SWREG1  EQU     3FB9H   ;SECONDS
                    0047  ;SWREG2  EQU     3FBAH   ;MINUTES
                    0048  ;SWREG3  EQU     3FBBH   ;HOURS
                    0049  ;SWREG4  EQU     3FBCH   ;DAY
                    0050  ;SWREG5  EQU     3FBDH   ;DATE
                    0051  ;SWREG6  EQU     3FBEH   ;MONTH
                    0052  ;SWREG7  EQU     3FBFH   ;YEAR
                    0053  ;
3FC0:               0054  BAUD    EQU     3FC0H   ;BAUD RATE
                    0055  ;KEYTIM  EQU     3FC2H   ;BEEP DELAY
                    0056  ;SPTEMP  EQU     3FC4H   ;TEMP SYSTEM CALL SP
                    0057  ;
                    0058  ; BLOCK FUNCTIONS
                    0059  ;
                    0060  ;COUNT   EQU     3FC6H   ;NUMBER OF BYTES TO MOVE
                    0061  ;BLKSRT  EQU     3FC8H   ;BLOCK START ADDRESS
                    0062  ;BLKEND  EQU     3FCAH   ;BLOCK END ADDRESS
                    0063  ;BLKDST  EQU     3FCCH   ;DESTINATION ADDRESS
                    0064  ;
                    0065  ;FUNJMP  EQU     3FCEH   ;FN FN KEY JUMP ADDRESS
                    0066  ;
                    0067  ; DISPLAY SCAN REGISTERS
                    0068  ;
                    0069  ;DISBUF  EQU     3FD0H   ;DISPLAY BUFFER
                    0070  ;ONTIM   EQU     3FD6H   ;DISPLAY SCAN ON TIME
                    0071  ;OFTIM   EQU     3FD7H   ;DISPLAY SCAN OFF TIME
                    0072  ;
                    0073  ; MONITOR VARIABLES
                    0074  ;
                    0075  ;MODE    EQU     3FD8H   ;DISPLAY MODE
                    0076  ;ADRESS  EQU     3FDAH   ;USER ADDRESS
                    0077  ;KEYDEL  EQU     3FDCH   ;AUTO INCREMENT DELAY
                    0078  ;
                    0079  ; TEMPORARY REGISTER STORAGE
                    0080  ;
                    0081  ;REGPNT  EQU     3FDEH   ;REGISTER POINTER
3FE0:               0082  PC_REG  EQU     3FE0H   ;PROGRAM COUNTER
3FE2:               0083  AF_REG  EQU     3FE2H   ;ACCUMULATOR,FLAG
3FE4:               0084  BC_REG  EQU     3FE4H   ;BC REGISTER PAIR
3FE6:               0085  DE_REG  EQU     3FE6H   ;DE REGISTER PAIR
3FE8:               0086  HL_REG  EQU     3FE8H   ;HL REGISTER PAIR
3FEA:               0087  IX_REG  EQU     3FEAH   ;INDEX REGISTER X
3FEC:               0088  IY_REG  EQU     3FECH   ;INDEX REGISTER Y
3FEE:               0089  SP_REG  EQU     3FEEH   ;STACK POINTER
                    0090  ;
                    0091  ; RESTART JUMP TABLE AND HARWARE TEST
                    0092  ;
                    0093  ;RST08   EQU     3FF0H   ;RESTART 08H JUMP
                    0094  ;RST10   EQU     3FF2H   ;RESTART 10H JUMP
                    0095  ;RST18   EQU     3FF4H   ;RESTART 18H JUMP
                    0096  ;RST20   EQU     3FF6H   ;RESTART 20H JUMP
                    0097  ;RST28   EQU     3FF8H   ;RESTART 28H JUMP
3FFA:               0098  RST38   EQU     3FFAH   ;INT INTERRUPT JUMP
                    0099  ;RST66   EQU     3FFCH   ;NMI INTERRUPT JUMP
                    0100  ;RAMSUM  EQU     3FFEH   ;USER RAM CHECKSUM
                    0101  ;DALLAS  EQU     3FFFH   ;RAM TEST LOCATION
                    0102  ;--------------------
                    0103  ; SYSTEM CALL NUMBERS
                    0104  ;--------------------
                    0105  ; 
                    0106  ; MONITOR 1.4 ADDED SCANKEY,INTELH 
                    0107  ;
                    0108  ;  LD   C,SYSTEM CALL NUMBER
                    0109  ;  RST  30H
                    0110  ;
0000:               0111  MAIN    EQU     00H     ;RESTART MONITOR
                    0112  ;VERS    EQU     01H     ;GET MONITOR VERSION
                    0113  ;DISADD  EQU     02H     ;ADDRESS -> DISPLAY BUFFER
                    0114  ;DISBYT  EQU     03H     ;DATA -> DISPLAY BUFFER
                    0115  ;CLRBUF  EQU     04H     ;CLEAR DISPLAY BUFFER
                    0116  ;SCAND   EQU     05H     ;SCAN DISPLAY
                    0117  ;CONBYT  EQU     06H     ;BYTE -> DISPLAY CODE
                    0118  ;CONVHI  EQU     07H     ;HI NYBBLE -> DISPLAY CODE
                    0119  ;CONVLO  EQU     08H     ;LO NYBBLE - > DISPLAY CODE
                    0120  ;SKEYIN  EQU     09H     ;SCAN DISPLAY UNTIL KEY PRESS
                    0121  ;SKEYRL  EQU     0AH     ;SCAN DISPLAY UNTIL KEY RELEASE
                    0122  ;KEYIN   EQU     0BH     ;WAIT FOR KEY PRESS
                    0123  ;KEYREL  EQU     0CH     ;WAIT FOR KEY RELEASE
000D:               0124  MENU    EQU     0DH     ;SELECT ENTRY FROM MENU
                    0125  ;CHKSUM  EQU     0EH     ;CALCULATE CHECKSUM
                    0126  ;MUL16   EQU     0FH     ;16 BIT MULTIPLY
                    0127  ;RAND    EQU     10H     ;GENERATE RANDOM NUMBER
                    0128  ;INDEXB  EQU     11H     ;INDEX INTO BYTE TABLE
                    0129  ;INDEXW  EQU     12H     ;INDEX INTO WORD TABLE
                    0130  ;MUSIC   EQU     13H     ;PLAY MUSIC TABLE
                    0131  ;TONE    EQU     14H     ;PLAY A NOTE
                    0132  ;BEEP    EQU     15H     ;KEY ENTRY BEEP
                    0133  ;SKATE   EQU     16H     ;SCAN 8X8 DISPLAY
0017:               0134  TXDATA  EQU     17H     ;TRANSMIT SERIAL BYTE
0018:               0135  RXDATA  EQU     18H     ;RECEIVE SERIAL BYTE
                    0136  ;ASCHEX  EQU     19H     ;ASCII CODE -> HEX
                    0137  ;WWATCH  EQU     1AH     ;WRITE TO SMART WATCH
                    0138  ;RWATCH  EQU     1BH     ;READ FROM SMART WATCH
                    0139  ;ONESEC  EQU     1CH     ;ONE SECOND DELAY USING SMARTWATCH
                    0140  ;RLSTEP  EQU     1DH     ;RELAY SEQUENCER
001E:               0141  DELONE  EQU     1EH     ;ONE SECOND DELAY LOOP
                    0142  ;SCANKEY EQU     1FH     ;SCAN THE KEYBOARD
0020:               0143  INTELH  EQU     20H     ;RECEIVE INTEL HEX FILE
                    0144  ;-------------------
                    0145  ; SOUTHERN CROSS BUG
                    0146  ;-------------------
                    0147  ; USES SCM 1.4  SYSTEM CALLS;
                    0148  ;
                    0149  ;MAIN
                    0150  ;MENU
                    0151  ;TXDATA
                    0152  ;RXDATA
                    0153  ;DELONE
                    0154  ;INTELH
                    0155  ;
                    0156  ; ASCII CODES
001B:               0157  ESC    EQU   0x1B 
000D:               0158  CR     EQU   0x0D
000A:               0159  LF     EQU   0x0A
                    0160  ;
                    0161  ; RAM VARIABLES
                    0162  ;
                    0163  ;ISTACK  EQU    3C00H     ;SAVE THE INITIAL STACK POINTER    
                    0164  ;ADDR    EQU    3C02H     ;THE ADDRESS  
                    0165  ;DATA    EQU    3C04H     ;THE DATA
                    0166  ;MSGBUF  EQU    3C05H     ;THE STRING TO DISPLAY
                    0167  ;
                    0168  ; USE A BIT OF RAM AT THE TOP OF THE SC RAM
                    0169  ;
                    0170         ORG    3C00H
3C00: FF FF         0171  ISTACK .DS   2           ;SAVE THE INITIAL STACK POINTER    
3C02: FF FF         0172  ADDR   .DS   2           ;THE ADDRESS  
3C04: FF            0173  DATA   .DS   1           ;THE DATA
3C05: FF FF FF FF   0174  MSGBUF .DS   80          ;THE STRING TO DISPLAY
3C09: FF FF ...     0174  
                    0175  ; 
                    0176  ;  WHERE DO WE WANT THE CODE TO RESIDE?
                    0177  ; 
                    0178         ORG   1000H       ;PUT IT AFTER THE MONITOR IN THE EEPROM
                    0179  ;        ORG    2800H     ;PUT IT IN SC RAM TO DEBUG IT
                    0180  
1000: 3E 40         0181  START  LD    A,0x40
1002: D3 85         0182         OUT   (SCAN),A    ;TURN OFF THE DISPLAY MAKE SERIAL TX HIGH
                    0183  ;
                    0184  ; START UP THE MONITOR
                    0185  ;          
1004: ED 73 00 3C   0186  COLD   LD    (ISTACK),SP ;SAVE STACK POINTER
1008: 21 23 12      0187         LD    HL,SSSTEP
100B: 22 FA 3F      0188         LD    (RST38),HL ;HIJACK THE SINGLE STEPPER
100E: 0E 1E         0189         LD    C,DELONE
1010: F7            0190         RST   0x30       ;WAIT A SEC SO THE HOST SEES TX HIGH   
1011: 21 59 13      0191         LD    HL,INITSZ  ;VT100 TERMINAL COMMANDS FOR CLEAR SCREEN,CURSOR HOME
1014: CD 15 12      0192         CALL  SNDMSG     ;INITIALISE THE TERMINAL
1017: 21 B5 12      0193         LD    HL,SIGNON
101A: CD 15 12      0194         CALL  SNDMSG     ;SEND THE SIGNON
                    0195  ;
                    0196  ; DISPLAY THE PROMPT AND WAIT FOR COMMANDS
                    0197  ;
101D: 3E 3E         0198  START2 LD    A,'>'
101F: CD 91 10      0199         CALL  OUTCH       ;DISPLAY THE PROMPT
1022: CD 95 10      0200  START3 CALL  INCH        ;GET A CHARACTER FROM THE CONSOLE
                    0201  ;
                    0202  ; IF THE COMMAND IS NOT IN THE COMMAND LIST REJECT IT
                    0203  ;
1025: 21 41 10      0204         LD    HL,MONMENU 
1028: 46            0205         LD    B,(HL) ;NUMBER OF COMMANDS
1029: 23            0206         INC   HL
102A: BE            0207  START4 CP    A,(HL)      ;IN THE LIST?
102B: 28 05         0208         JR    Z,START5    ;OK DO IT
102D: 23            0209         INC   HL
102E: 10 FA         0210         DJNZ  START4      ;KEEP LOOKING
1030: 18 F0         0211         JR    START3
1032: CD 91 10      0212  START5 CALL  OUTCH       ;ECHO 
1035: 21 41 10      0213         LD    HL,MONMENU  ;USE THE MENU HANDLER 
1038: 0E 0D         0214         LD    C,MENU      ;KEY IN A, EXECUTE MENU
103A: F7            0215         RST   30H
                    0216  ;      
                    0217  ; THE MENU FUNCTION CALL LEAVES THE RETURN ADDRESS OF THE MENU CALL
                    0218  ; ON THE STACK SO ANY CALLED SUBROUTINES CAN COME BACK HERE WITH A RET.
                    0219  ;           
103B: CD 8A 10      0220  WARM   CALL  TXCRLF     ;START ON A NEW LINE
103E: C3 1D 10      0221         JP    START2
                    0222  ;
                    0223  ; SCBUG MONITOR COMMANDS
                    0224  ;
1041: 06            0225  MONMENU     .DB 6
1042: 44 54 4D 47   0226              .DB 'D','T','M','G','I','X'
1046: 49 58         0226  
                    0227  
1048: 55 11 BC 10   0228              .DW DSPLAY,SSTOGL,MODIFY
104C: C5 10         0228  
104E: 99 10 18 11   0229              .DW GOJUMP,INTEL,EXIT
1052: 31 11         0229  
                    0230  ;-----------------------------
                    0231  ; GET A BYTE FROM THE TERMINAL
                    0232  ;-----------------------------
1054: CD 95 10      0233  GETBYT CALL  INCH
1057: FE 1B         0234         CP    ESC
1059: 28 27         0235         JR    Z,GETOUT
105B: 47            0236         LD    B,A                ;SAVE TO ECHO      
105C: CD 3A 11      0237         CALL  ASCHEX
105F: 30 F3         0238         JR    NC,GETBYT          ;REJECT NON HEX CHARS    
1061: 21 04 3C      0239         LD    HL,DATA
1064: 77            0240         LD    (HL),A 
1065: 78            0241         LD    A,B         
1066: CD 91 10      0242         CALL  OUTCH             ;ECHO VALID HEX
                    0243         
1069: CD 95 10      0244  GETNYB CALL  INCH
106C: FE 1B         0245         CP    ESC
106E: 28 12         0246         JR    Z,GETOUT
1070: 47            0247         LD    B,A               ;SAVE TO ECHO
1071: CD 3A 11      0248         CALL  ASCHEX
1074: 30 F3         0249         JR    NC,GETNYB         ;REJECT NON HEX CHARS
1076: ED 6F         0250         RLD
1078: 78            0251         LD    A,B
1079: CD 91 10      0252         CALL  OUTCH             ;ECHO VALID HEX
107C: 7E            0253         LD    A,(HL)
107D: CD 82 10      0254         CALL  GETOUT            ;MAKE SURE WE CLEAR THE CARRY BY SETTING IT,
1080: 3F            0255         CCF                    ;AND THEN COMPLEMENTING IT
1081: C9            0256         RET   
1082: 37            0257  GETOUT SCF                    ;SET THE CARRY FLAG TO EXIT BACK TO MENU
1083: C9            0258         RET
                    0259  ;---------------
                    0260  ; OUTPUT A SPACE
                    0261  ;---------------
1084: 3E 20         0262  OUTSP  LD    A,20H
1086: CD 91 10      0263         CALL  OUTCH
1089: C9            0264         RET
                    0265  ;-------------      
                    0266  ; OUTPUT CRLF
                    0267  ;------------
108A: 3E 0D         0268  TXCRLF LD   A,CR
108C: CD 91 10      0269         CALL OUTCH   
108F: 3E 0A         0270         LD   A,LF
                    0271  ;-----------------------------------
                    0272  ; OUTPUT A CHARACTER TO THE TERMINAL
                    0273  ;-----------------------------------       
1091: 0E 17         0274  OUTCH  LD    C,TXDATA
1093: F7            0275         RST   30H
1094: C9            0276         RET
                    0277  ;------------------------------------
                    0278  ; INPUT A CHARACTER FROM THE TERMINAL
                    0279  ;------------------------------------
1095: 0E 18         0280  INCH   LD    C,RXDATA
1097: F7            0281         RST   30H
1098: C9            0282         RET
                    0283  ;------------------------------
                    0284  ; GO <ADDR>
                    0285  ; TRANSFERS EXECUTION TO <ADDR>
                    0286  ;------------------------------
1099: CD 84 10      0287  GOJUMP CALL  OUTSP       
109C: CD 54 10      0288         CALL  GETBYT      ;GET ADDRESS HIGH BYTE
109F: D8            0289         RET   C
10A0: 32 03 3C      0290         LD    (ADDR+1),A  ;SAVE ADDRESS HIGH
10A3: CD 54 10      0291         CALL  GETBYT      ;GET ADDRESS LOW BYTE
10A6: D8            0292         RET   C
10A7: 32 02 3C      0293         LD    (ADDR),A    ;SAVE ADDRESS LOW 
                    0294  ;
                    0295  ; WAIT FOR A CR OR ESC
                    0296  ;       
10AA: CD 95 10      0297  GOJMP1 CALL  INCH
10AD: FE 1B         0298         CP    ESC         ;ESC KEY?
10AF: C8            0299         RET   Z
10B0: FE 0D         0300         CP    CR
10B2: 20 F6         0301         JR    NZ,GOJMP1
10B4: CD 8A 10      0302         CALL  TXCRLF
10B7: E1            0303         POP   HL          ;POP THE UNUSED MENU RETURN ADDRESS FROM THE STACK
10B8: 2A 02 3C      0304         LD    HL,(ADDR)
10BB: E9            0305         JP    (HL)        ;GOOD LUCK WITH THAT!
                    0306  ;-----------------------------------------------
                    0307  ; T COMMAND TOGGLE SINGLE STEPPER (IF INSTALLED)
                    0308  ;-----------------------------------------------
                    0309  ; CAN'T TELL IF THE SINGLE STEPPER IS ON OR OFF
                    0310  ; SO WE WILL JUST TOGGLE THE FLIP FLOP.
                    0311  ;
10BC: 21 F6 12      0312  SSTOGL LD    HL,TOGGLE
10BF: CD 15 12      0313         CALL  SNDMSG  
10C2: D3 87         0314         OUT   (IO7),A               ;TOGGLE
10C4: C9            0315         RET
                    0316  ;----------------------------
                    0317  ; M DISPLAY AND MODIFY MEMORY
                    0318  ;----------------------------
10C5: CD 84 10      0319  MODIFY CALL  OUTSP
                    0320  ;
                    0321  ;GET THE ADDRESS        
                    0322  ;
10C8: CD 54 10      0323         CALL  GETBYT 
10CB: D8            0324         RET   C        
10CC: 32 03 3C      0325         LD    (ADDR+1),A  ;SAVE ADDRESS HIGH
10CF: CD 54 10      0326         CALL  GETBYT
10D2: D8            0327         RET   C
10D3: 32 02 3C      0328         LD    (ADDR),A    ;SAVE ADDRESS LOW 
                    0329  ;
                    0330  ; DISPLAY ON A NEW LINE
                    0331  ;       
10D6: CD 8A 10      0332  MDIFY1 CALL  TXCRLF       
10D9: ED 5B 02 3C   0333         LD    DE,(ADDR)    
10DD: 21 05 3C      0334         LD    HL,MSGBUF   
10E0: CD E7 11      0335         CALL  WRDASC      ;CONVERT ADDRESS IN DE TO ASCII
10E3: 21 05 3C      0336         LD    HL,MSGBUF
10E6: CD DB 11      0337         CALL  WRDOUT      ;OUTPUT THE ADDRESS
10E9: CD 84 10      0338         CALL  OUTSP    
                    0339  ;      
                    0340  ;GET THE DATA AT THE ADDRESS        
                    0341  ;
10EC: 2A 02 3C      0342          LD   HL,(ADDR)       
10EF: 7E            0343          LD   A,(HL)
                    0344  ;
                    0345  ; DISPLAY THE DATA
                    0346  ;        
10F0: 21 05 3C      0347         LD    HL,MSGBUF
10F3: CD EC 11      0348         CALL  BYTASC     ;CONVERT THE DATA BYTE IN A TO ASCII
10F6: 21 05 3C      0349         LD    HL,MSGBUF
10F9: CD DE 11      0350         CALL  BYTOUT      ;OUTPUT THE BYTE
10FC: CD 84 10      0351         CALL  OUTSP
                    0352  ;
                    0353  ; GET NEW DATA,EXIT OR CONTINUE
                    0354  ;
10FF: CD 54 10      0355         CALL  GETBYT
1102: D8            0356         RET   C
1103: 47            0357         LD    B,A         ;SAVE IT FOR LATER
1104: 2A 02 3C      0358         LD    HL,(ADDR)
1107: 77            0359         LD    (HL),A      ;PUT THE BYTE AT THE CURRENT ADDRESS
1108: 78            0360         LD    A,B
1109: BE            0361         CP    (HL)
110A: 28 05         0362         JR    Z,MDIFY2
110C: 3E 3F         0363         LD    A,'?'
110E: CD 91 10      0364         CALL  OUTCH       ;NOT THE SAME DATA, PROBABLY NO RAM THERE      
                    0365  ;
                    0366  ; INCREMENT THE ADDRESS
                    0367  ;
1111: 23            0368  MDIFY2 INC   HL
1112: 22 02 3C      0369         LD    (ADDR),HL
1115: C3 D6 10      0370         JP    MDIFY1      
                    0371  ;-----------------------
                    0372  ; RECEIVE INTEL HEX FILE
                    0373  ;-----------------------       
1118: 21 0D 13      0374  INTEL  LD    HL,TXFILE
111B: CD 15 12      0375         CALL  SNDMSG      ;SEND FILE
111E: 0E 20         0376         LD    C,INTELH
1120: F7            0377         RST   30H
1121: 20 07         0378         JR    NZ,INTEL1       
1123: 21 26 13      0379         LD    HL,FILEOK
1126: CD 15 12      0380         CALL  SNDMSG      ;GOT FILE OK
1129: C9            0381         RET
112A: 21 3B 13      0382  INTEL1 LD    HL,CSUMERR
112D: CD 15 12      0383         CALL  SNDMSG      ;CHECKSUM ERROR
1130: C9            0384         RET    
                    0385  ;------------------------
                    0386  ; EXIT BACK TO SC MONITOR
                    0387  ;------------------------       
1131: 21 4E 13      0388  EXIT   LD    HL,BYE
1134: CD 15 12      0389         CALL  SNDMSG       
1137: 0E 00         0390         LD    C,MAIN      ;STACK IS RESET TO TOP OF RAM IN MAIN   
1139: F7            0391         RST   30H           
                    0392  ;----------------------------------------
                    0393  ; CONVERT ASCII CHARACTER INTO HEX NYBBLE
                    0394  ;----------------------------------------
                    0395  ; THIS ROUTINE IS FOR MASKING OUT KEYBOARD
                    0396  ; ENTRY OTHER THAN HEXADECIMAL KEYS
                    0397  ;
                    0398  ;CONVERTS ASCII 0-9,A-F INTO HEX LSN
                    0399  ;ENTRY : A= ASCII 0-9,A-F
                    0400  ;EXIT  : CARRY =  1
                    0401  ;          A= HEX 0-F IN LSN    
                    0402  ;      : CARRY = 0
                    0403  ;          A= OUT OF RANGE CHARACTER & 0x7F
                    0404  ; A AND F REGISTERS MODIFIED
                    0405  ;
113A: E6 7F         0406  ASCHEX AND   0x7F        ;STRIP OUT PARITY
113C: FE 30         0407         CP    0x30
113E: 38 12         0408         JR    C,ACHEX3    ;LESS THAN 0
1140: FE 3A         0409         CP    0x3A
1142: 30 02         0410         JR    NC,ACHEX2   ;MORE THAN 9
1144: 37            0411  ACHEX1 SCF               ;SET THE CARRY - IS HEX
1145: C9            0412         RET
                    0413  ;     
1146: FE 41         0414  ACHEX2 CP    0x41
1148: 38 08         0415         JR    C,ACHEX3    ;LESS THAN A
114A: FE 47         0416         CP    0x47
114C: 30 04         0417         JR    NC,ACHEX3   ;MORE THAN F
114E: D6 07         0418         SUB   0x07        ;CONVERT TO NYBBLE
1150: 18 F2         0419         JR    ACHEX1  
1152: E6 FF         0420  ACHEX3 AND   0xFF        ;RESET THE CARRY - NOT HEX
1154: C9            0421         RET
                    0422  ;--------------------------
                    0423  ; D DISPLAY MEMORY LOCATION
                    0424  ;--------------------------
1155: CD 84 10      0425  DSPLAY CALL  OUTSP       ;A SPACE
1158: CD 54 10      0426         CALL  GETBYT
115B: D8            0427         RET   C         
115C: 32 03 3C      0428         LD    (ADDR+1),A  ;SAVE ADDRESS HIGH
115F: CD 54 10      0429         CALL  GETBYT
1162: D8            0430         RET   C
1163: 32 02 3C      0431         LD    (ADDR),A    ;SAVE ADDRESS LOW 
                    0432  ;
                    0433  ; WAIT FOR CR OR ESC
                    0434  ;
1166: CD 95 10      0435  DPLAY1 CALL  INCH
1169: FE 1B         0436         CP    ESC
116B: C8            0437         RET   Z
116C: FE 0D         0438         CP    CR
116E: 20 F6         0439         JR    NZ,DPLAY1          
1170: CD 8A 10      0440         CALL  TXCRLF      ;NEWLINE
                    0441  ;
                    0442  ; DISPLAY THE LINE
                    0443  ;
1173: CD 88 11      0444  DPLAY2 CALL  DPLINE
1176: ED 53 02 3C   0445         LD    (ADDR),DE   ;SAVE THE NEW ADDRESS
                    0446  ;
                    0447  ; DISPLAY MORE LINES OR EXIT
                    0448  ;       
117A: CD 95 10      0449  DPLAY3 CALL  INCH
117D: 38 FB         0450         JR    C,DPLAY3   
117F: FE 20         0451         CP    0x20        ;SPACE DISPLAYS THE NEXT LINE
1181: 28 F0         0452         JR    Z,DPLAY2
1183: FE 1B         0453         CP    ESC         ;ESC EXITS
1185: 20 F3         0454         JR    NZ,DPLAY3     
1187: C9            0455         RET   
                    0456  ;-------------------------
                    0457  ; DISPLAY A LINE OF MEMORY
                    0458  ;-------------------------      
1188: ED 5B 02 3C   0459  DPLINE LD    DE,(ADDR)   ;ADDRESS TO BE DISPLAYED
118C: 21 05 3C      0460         LD    HL,MSGBUF   ;HL POINTS TO WHERE THE OUTPUT STRING GOES
                    0461  ;
                    0462  ; DISPLAY THE ADDRESS
                    0463  ;         
118F: CD E7 11      0464         CALL  WRDASC     ;CONVERT ADDRESS IN DE TO ASCII
1192: CD CB 11      0465         CALL  SPCBUF        
                    0466  ;
                    0467  ; DISPLAY 16 BYTES
                    0468  ;
1195: 06 10         0469         LD    B,16
1197: 1A            0470  DLINE1 LD    A,(DE)
1198: CD EC 11      0471         CALL  BYTASC
119B: CD CB 11      0472         CALL  SPCBUF
119E: 13            0473         INC   DE        
119F: 10 F6         0474         DJNZ  DLINE1
11A1: CD CB 11      0475         CALL  SPCBUF
                    0476  ;
                    0477  ; NOW DISPLAY THE ASCII CHARACTER
                    0478  ; IF YOU ARE DISPLAYING NON-MEMORY AREAS THE BYTES READ AND THE ASCII COULD
                    0479  ; BE DIFFERENT BETWEEN THE TWO PASSES!
                    0480  ;
11A4: ED 5B 02 3C   0481         LD    DE,(ADDR)    
11A8: 06 10         0482         LD    B,16
11AA: 1A            0483  DLINE2 LD    A,(DE)   
11AB: FE 20         0484         CP    0x20
11AD: 38 07         0485         JR    C,DOT
11AF: FE 7F         0486         CP    0x7F
11B1: 30 03         0487         JR    NC,DOT
11B3: C3 B8 11      0488         JP    NDOT
11B6: 3E 2E         0489  DOT    LD    A,'.'
11B8: CD CD 11      0490  NDOT   CALL  INBUF
11BB: 13            0491         INC   DE       
11BC: 10 EC         0492         DJNZ  DLINE2
                    0493  ;         
                    0494  ;TERMINATE AND DISPLAY STRING
                    0495  ;       
11BE: CD D0 11      0496         CALL  BCRLF
11C1: 3E 00         0497         LD    A,0x00
11C3: 77            0498         LD    (HL),A
11C4: 21 05 3C      0499         LD    HL,MSGBUF
11C7: CD 15 12      0500         CALL  SNDMSG
11CA: C9            0501         RET
                    0502  ;
                    0503  ; PUT A SPACE IN THE BUFFER
                    0504  ;
11CB: 3E 20         0505  SPCBUF LD    A,0x20
11CD: 77            0506  INBUF  LD    (HL),A
11CE: 23            0507         INC   HL
11CF: C9            0508         RET
                    0509  ;
                    0510  ; PUT A CR LF IN THE BUFFER
                    0511  ;        
11D0: 3E 0D         0512  BCRLF  LD    A,CR  
11D2: CD CD 11      0513         CALL  INBUF
11D5: 3E 0A         0514         LD    A,LF
11D7: CD CD 11      0515         CALL  INBUF
11DA: C9            0516         RET
                    0517  ;----------------------     
                    0518  ; SEND ASCII HEX VALUES        
                    0519  ;----------------------
                    0520  ;
                    0521  ; OUTPUT THE 4 BYTE, WRDOUT
                    0522  ; THE 2 BYTE, BYTOUT
                    0523  ; OR THE SINGLE BYTE, NYBOUT
                    0524  ; ASCII STRING AT HL TO THE SERIAL PORT
                    0525  ;
11DB: CD DE 11      0526  WRDOUT CALL  BYTOUT
11DE: CD E1 11      0527  BYTOUT CALL  NYBOUT
11E1: 7E            0528  NYBOUT LD    A,(HL)
11E2: CD 91 10      0529         CALL  OUTCH
11E5: 23            0530         INC   HL
11E6: C9            0531         RET       
                    0532  ;----------------
                    0533  ;CONVERT TO ASCII 
                    0534  ;----------------
                    0535  ;
                    0536  ; CONVERT A WORD,A BYTE OR A NYBBLE TO ASCII
                    0537  ;
                    0538  ;         ENTRY :  A = BINARY TO CONVERT
                    0539  ;                  HL = CHARACTER BUFFER ADDRESS   
                    0540  ;        EXIT   :  HL = POINTS TO LAST CHARACTER+1
                    0541  ;   
                    0542  ;        MODIFIES : DE
                    0543  
11E7: 7A            0544  WRDASC LD    A,D         ;CONVERT AND
11E8: CD EC 11      0545         CALL  BYTASC      ;OUTPUT D
11EB: 7B            0546         LD    A,E         ;THEN E
                    0547  ;
                    0548  ;CONVERT A BYTE TO ASCII 
                    0549  ;
11EC: F5            0550  BYTASC PUSH  AF          ;SAVE A FOR SECOND NYBBLE 
11ED: 0F            0551         RRCA              ;SHIFT HIGH NYBBLE ACROSS
11EE: 0F            0552         RRCA
11EF: 0F            0553         RRCA
11F0: 0F            0554         RRCA
11F1: CD F5 11      0555         CALL NYBASC       ;CALL NYBBLE CONVERTER 
11F4: F1            0556         POP AF            ;RESTORE LOW NYBBLE
                    0557  ;           
                    0558  ; CONVERT A NYBBLE TO ASCII
                    0559  ;
11F5: E6 0F         0560  NYBASC AND   0FH         ;MASK OFF HIGH NYBBLE 
11F7: C6 90         0561         ADD   A,90H       ;CONVERT TO
11F9: 27            0562         DAA               ;ASCII
11FA: CE 40         0563         ADC   A,40H
11FC: 27            0564         DAA
                    0565  ;            
                    0566  ; SAVE IN STRING
                    0567  ;
11FD: 77            0568  INSBUF LD    (HL),A
11FE: 23            0569         INC   HL 
11FF: C9            0570         RET 
                    0571  ;------------------------------------------------------
                    0572  ; CONVERT A BYTE INTO A STRING OF ASCII ONES AND ZEROES
                    0573  ;------------------------------------------------------
                    0574  ;       
                    0575  ;        DESCRIPTION : CONVERTS A BYTE, STARTING AT BIT 7,
                    0576  ;                      INTO A STRING OF ASCII
                    0577  ;                      ONES AND ZEROES.
                    0578  ;
                    0579  ;           ENTRY :  A = BINARY TO CONVERT
                    0580  ;                   HL = CHARACTER BUFFER ADDRESS   
                    0581  ;           EXIT :  HL = POINTS TO LAST CHARACTER+1
                    0582  ;   
                    0583  ;        MODIFIES : NONE
                    0584  ;
                    0585  ;
1200: C5            0586  BITASC PUSH  BC
1201: 06 08         0587         LD    B,08H       ;LOOK AT ALL 8 BITS
1203: CB 7F         0588  BTASC1 BIT   7,A         ;A 1 OR A 0?
1205: 20 05         0589         JR    NZ,BTASC3
1207: 0E 30         0590         LD    C,30H       ;IT'S A ZERO
1209: 71            0591  BTASC2 LD    (HL),C
120A: 18 03         0592         JR    BTASC4
                    0593              
120C: 0E 31         0594  BTASC3 LD    C,31H       ;IT'S A ONE
120E: 71            0595         LD    (HL),C
                    0596              
120F: 23            0597  BTASC4 INC   HL
1210: 17            0598         RLA
1211: 10 F0         0599         DJNZ  BTASC1      ;NEXT BIT
1213: C1            0600         POP   BC
1214: C9            0601         RET
                    0602  ;-----------------------------------------
                    0603  ; SEND AN ASCII STRING OUT THE SERIAL PORT
                    0604  ;-----------------------------------------
                    0605  ; 
                    0606  ; SENDS A ZERO TERMINATED STRING OR 
                    0607  ; 80 CHARACTERS MAX. OUT THE SERIAL PORT
                    0608  ;
                    0609  ;      ENTRY : HL = POINTER TO 0x00 TERMINATED STRING
                    0610  ;      EXIT  : NONE
                    0611  ;
                    0612  ;       MODIFIES : A,B,C
                    0613  ;          
1215: 06 50         0614  SNDMSG LD    B,80
1217: 7E            0615  SDMSG1 LD    A,(HL)
1218: FE 00         0616         CP    0x00
121A: 28 06         0617         JR    Z,SDMSG2   
121C: CD 91 10      0618         CALL  OUTCH
121F: 23            0619         INC   HL
1220: 10 F5         0620         DJNZ  SDMSG1       
1222: C9            0621  SDMSG2 RET
                    0622  ;----------------------
                    0623  ; SERIAL SINGLE STEPPER
                    0624  ;----------------------
1223: E1            0625  SSSTEP POP   HL          ;GET HL BACK
1224: F5            0626         PUSH  AF          ;SAVE AF FOR LATER  
1225: 22 E8 3F      0627         LD    (HL_REG),HL
1228: ED 53 E6 3F   0628         LD    (DE_REG),DE
122C: ED 43 E4 3F   0629         LD    (BC_REG),BC
1230: DD 22 EA 3F   0630         LD    (IX_REG),IX
1234: FD 22 EC 3F   0631         LD    (IY_REG),IY ;SAVE REGISTERS
1238: E1            0632         POP   HL          ;GET AF BACK
1239: 22 E2 3F      0633         LD    (AF_REG),HL ;SAVE AF
123C: E1            0634         POP   HL          ;GET PC RETURN ADDRESS
123D: 22 E0 3F      0635         LD    (PC_REG),HL ;SAVE PC
1240: ED 73 EE 3F   0636         LD    (SP_REG),SP ;SAVE STACK POINTER
                    0637  ;            
                    0638  ;DISPLAY THE REGISTERS HEADING          
                    0639  ;          
1244: 21 C1 12      0640         LD    HL,REGS
1247: CD 15 12      0641         CALL  SNDMSG
                    0642  ;
                    0643  ; DISPLAY THE REGISTERS
                    0644  ;            
124A: 06 08         0645         LD	 B,08H
124C: 21 05 3C      0646         LD    HL,MSGBUF
124F: DD 21 E0 3F   0647         LD    IX,PC_REG
1253: DD 7E 01      0648  DISREG LD    A,(IX+1)
1256: CD EC 11      0649         CALL  BYTASC
1259: DD 7E 00      0650         LD    A,(IX+0)
125C: CD EC 11      0651         CALL  BYTASC
125F: DD 23         0652         INC   IX
1261: DD 23         0653         INC   IX
1263: 3E 20         0654         LD    A,' '
1265: 77            0655         LD    (HL),A
1266: 23            0656         INC   HL
1267: 10 EA         0657         DJNZ  DISREG       
                    0658  ;
                    0659  ; DISPLAY THE FLAGS 
                    0660  ;          
1269: 3A E2 3F      0661         LD    A,(AF_REG)  ;GET THE FLAGS AND      
126C: CD 00 12      0662         CALL  BITASC      ;SHOW THEM AS BITS 
                    0663  
126F: CD D0 11      0664  SZCRLF CALL  BCRLF
1272: 3E 00         0665         LD    A,0x00
1274: 77            0666         LD    (HL),A      ;TERMINATE THE STRING
                    0667  ;        
                    0668  ; DISPLAY THE REGISTERS
                    0669  ;        
1275: 21 05 3C      0670         LD    HL,MSGBUF
1278: CD 15 12      0671         CALL  SNDMSG
                    0672  ;
                    0673  ; SPACE KEY CONTINUES
                    0674  ;
127B: CD 95 10      0675  LOOP1  CALL  INCH
127E: 38 FB         0676         JR    C,LOOP1      
1280: FE 20         0677         CP    0x20        ;IS IT SPACE
1282: 28 0C         0678         JR    Z,RETPGM
1284: FE 1B         0679         CP    ESC         ;ESC QUITS
1286: 20 F3         0680         JR    NZ,LOOP1
                    0681  ;       
                    0682  ; RETURN TO MONITOR
                    0683  ; 
1288: ED 7B 00 3C   0684         LD    SP,(ISTACK) ;RESTORE THE STACK POINTER
128C: FB            0685         EI                ;RE-ENABLE INTERRUPTS      
128D: C3 3B 10      0686         JP    WARM        ;EXIT THE INTERRUPT ROUTINE
                    0687  ;
                    0688  ; RETURN TO PROGRAM
                    0689  ;
1290: ED 7B EE 3F   0690  RETPGM LD    SP,(SP_REG) ;PUT STACK POINTER BACK
1294: 2A E0 3F      0691         LD    HL,(PC_REG) ;PUT RETURN
1297: E5            0692         PUSH  HL          ;ADDRESS BACK ON STACK
1298: 2A E2 3F      0693         LD    HL,(AF_REG)
129B: E5            0694         PUSH  HL          ;SAVE AF REG FOR LATER
129C: FD 2A EC 3F   0695         LD    IY,(IY_REG)
12A0: DD 2A EA 3F   0696         LD    IX,(IX_REG)
12A4: ED 4B E4 3F   0697         LD    BC,(BC_REG)
12A8: ED 5B E6 3F   0698         LD    DE,(DE_REG) ;RESTORE REGISTERS
12AC: F1            0699         POP   AF          ;RESTORE AF
12AD: 2A E8 3F      0700         LD    HL,(HL_REG) ;RESTORE HL
12B0: FB            0701         EI                ;RE-ENABLE INTERRUPTS
12B1: C9            0702         RET               ;AND RETURN TO PROGRAM  
                    0703  ;
                    0704  ; STRING CONSTANTS
                    0705  ;
12B2: 0D 0A 00      0706  CRLF        .DB     CR,LF,0x00
12B5: 53 43 42 55   0707  SIGNON      .DB     "SCBUG 1.0",CR,LF,0x00
12B9: 47 20 ...     0707  
12C1: 0D 0A 50 43   0708  REGS        .DB     CR,LF,"PC   AF   BC   DE   HL   IX   IY   SP   SZ-H-VNC",CR,LF,0x00
12C5: 20 20 ...     0708  
12F6: 0D 0A 53 49   0709  TOGGLE      .DB     CR,LF,"SINGLE STEP TOGGLE",CR,LF,0x00
12FA: 4E 47 ...     0709  
130D: 0D 0A 53 45   0710  TXFILE      .DB     CR,LF,"SEND INTEL HEX FILE...",0x00
1311: 4E 44 ...     0710  
1326: 0D 0A 46 49   0711  FILEOK      .DB     CR,LF,"FILE RECEIVED OK",CR,LF,0x00
132A: 4C 45 ...     0711  
133B: 0D 0A 43 48   0712  CSUMERR     .DB     CR,LF,"CHECKSUM ERROR",CR,LF,0x00
133F: 45 43 ...     0712  
134E: 0D 0A 42 59   0713  BYE         .DB     CR,LF,"BYE...",CR,LF,0x00
1352: 45 2E ...     0713  
                    0714  ;
                    0715  ;VT100 TERMINAL COMMANDS FOR CLEAR SCREEN,CURSOR HOME
                    0716  ;
1359: 1B 5B 48 1B   0717  INITSZ      .DB     27,"[H",27,"[2J",0x00
135D: 5B 32 4A 00   0717  
                    0718              END
                    0719  
                    0720  
                    0721  
                    0722  
                    0723  
                    0724  
                    0725  
                    0726  
                    0727  
 
